CREATE TABLE "Users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" nvarchar(50) NOT NULL,
  "address" nvarchar(100),
  "email" varchar(50),
  "phone" varchar(15),
  "birth_date" date,
  "sex" nvarchar(3),
  "username" varchar(30) UNIQUE NOT NULL,
  "password" varchar(100) NOT NULL,
  "role" "enum(Patient,Doctor,Staff)" NOT NULL
);

CREATE TABLE "Patients" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer UNIQUE NOT NULL,
  "medical_record_number" varchar(20) UNIQUE,
  "notes" text
);

CREATE TABLE "Doctors" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer UNIQUE NOT NULL,
  "license_number" varchar(50) UNIQUE,
  "specialty" varchar(100),
  "years_of_experience" int,
  "notes" text
);

CREATE TABLE "Staff" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer UNIQUE NOT NULL,
  "staff_code" varchar(20) UNIQUE,
  "position" varchar(50),
  "notes" text
);

CREATE TABLE "Appointments" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "patient_id" integer NOT NULL,
  "doctor_id" integer NOT NULL,
  "appointment_date" date NOT NULL,
  "appointment_time" time NOT NULL,
  "duration_minutes" int DEFAULT 30,
  "status" "enum(Scheduled,Completed,Cancelled,No Show)" DEFAULT 'Scheduled',
  "notes" text
);

CREATE TABLE "Prescriptions" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "patient_id" integer NOT NULL,
  "doctor_id" integer NOT NULL,
  "date_issued" date NOT NULL,
  "expires_on" date,
  "sph_od" decimal(4,2),
  "cyl_od" decimal(4,2),
  "axis_od" integer,
  "add_power_od" decimal(4,2),
  "prism_od" varchar(10),
  "sph_os" decimal(4,2),
  "cyl_os" decimal(4,2),
  "axis_os" integer,
  "add_power_os" decimal(4,2),
  "prism_os" varchar(10),
  "notes" text
);

CREATE TABLE "InventoryItems" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "category" "enum(Frame,Lens,Equipment,Supply,Medicine)",
  "name" varchar(255),
  "quantity" int,
  "unit" varchar(50),
  "price" decimal(10,2),
  "date_added" date,
  "expiry_date" date,
  "notes" text
);

CREATE TABLE "Frames" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "item_id" int,
  "frame_type" varchar(50),
  "material" varchar(50),
  "color" varchar(50)
);

CREATE TABLE "Lenses" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "item_id" int,
  "lens_type" varchar(50),
  "material" varchar(50),
  "coating" varchar(255),
  "power_range" varchar(100)
);

CREATE TABLE "Equipment" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "item_id" int,
  "model" varchar(100),
  "serial_number" varchar(100),
  "manufacturer" varchar(100),
  "date_purchased" date,
  "warranty_period" varchar(50),
  "last_maintenance" date,
  "next_maintenance" date,
  "status" "enum(In Use,Maintenance,Broken,Disposed)"
);

CREATE TABLE "Supplies" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "item_id" int,
  "supply_type" varchar(100)
);

CREATE TABLE "Medicines" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "item_id" int,
  "active_ingredient" varchar(100),
  "dosage_form" varchar(100),
  "strength" varchar(100),
  "usage" varchar(255)
);

COMMENT ON COLUMN "Prescriptions"."prism_od" IS 'Ví dụ: "2.0 BO"';

COMMENT ON COLUMN "Prescriptions"."prism_os" IS 'Ví dụ: "1.5 BU"';

ALTER TABLE "Patients" ADD FOREIGN KEY ("user_id") REFERENCES "Users" ("id");

ALTER TABLE "Doctors" ADD FOREIGN KEY ("user_id") REFERENCES "Users" ("id");

ALTER TABLE "Staff" ADD FOREIGN KEY ("user_id") REFERENCES "Users" ("id");

ALTER TABLE "Appointments" ADD FOREIGN KEY ("patient_id") REFERENCES "Patients" ("user_id");

ALTER TABLE "Appointments" ADD FOREIGN KEY ("doctor_id") REFERENCES "Doctors" ("user_id");

ALTER TABLE "Frames" ADD FOREIGN KEY ("item_id") REFERENCES "InventoryItems" ("id");

ALTER TABLE "Lenses" ADD FOREIGN KEY ("item_id") REFERENCES "InventoryItems" ("id");

ALTER TABLE "Equipment" ADD FOREIGN KEY ("item_id") REFERENCES "InventoryItems" ("id");

ALTER TABLE "Supplies" ADD FOREIGN KEY ("item_id") REFERENCES "InventoryItems" ("id");

ALTER TABLE "Medicines" ADD FOREIGN KEY ("item_id") REFERENCES "InventoryItems" ("id");

ALTER TABLE "Users" ADD FOREIGN KEY ("name") REFERENCES "Users" ("email");

ALTER TABLE "Users" ADD FOREIGN KEY ("address") REFERENCES "Users" ("name");
